1
00:00:00.000 --> 00:00:14.000
Hey, Cath. Hey, Cath. Hello. Hello. If you if you met out like before, Cath, I don't think so if I have it in a while.

2
00:00:15.000 --> 00:00:18.000
Yeah, I think before my paternity leave.

3
00:00:19.000 --> 00:00:24.000
Ray style up again. Huh? Ray style in this morning.

4
00:00:24.000 --> 00:00:30.000
It's too cold. I am really excited about speeding. Sorry to say that.

5
00:00:30.000 --> 00:00:36.000
No, no, no. Hey, Nick.

6
00:00:38.000 --> 00:00:43.000
Hey, John.

7
00:00:43.000 --> 00:00:55.000
Is it me or John's camera is very.

8
00:00:55.000 --> 00:01:00.000
Oh, it's not with bandwidth is low. Say it.

9
00:01:00.000 --> 00:01:01.000
Yeah.

10
00:01:01.000 --> 00:01:05.000
It looks like it's very cold.

11
00:01:05.000 --> 00:01:14.000
Hey, it was it's getting back. Hey, out. Hey, guys. Hey.

12
00:01:16.000 --> 00:01:23.000
All right, let's see who are we waiting. Hey, Rachel. Hi. Hey.

13
00:01:24.000 --> 00:01:26.000
I'm just checking who else waiting for.

14
00:01:26.000 --> 00:01:32.000
Oh, actually, nobody.

15
00:01:32.000 --> 00:01:37.000
I'll share my screen and we can start.

16
00:01:43.000 --> 00:01:44.000
Hmm.

17
00:01:44.000 --> 00:01:45.000
What a cold.

18
00:01:49.000 --> 00:01:51.000
How did you get snow?

19
00:01:51.000 --> 00:01:56.000
It hailed. We built a snowman out of hell. It was awesome.

20
00:01:56.000 --> 00:01:58.000
Hell man. Yeah.

21
00:01:58.000 --> 00:02:04.000
It we try to put someone to stay cool for the night and by the morning it was like just like

22
00:02:04.000 --> 00:02:07.000
three greens of hell left. I was sad.

23
00:02:07.000 --> 00:02:10.000
I was worried I was totaling my car.

24
00:02:10.000 --> 00:02:16.000
All right, Ken, everyone see my screen?

25
00:02:16.000 --> 00:02:24.000
Yeah. All right. So I don't know how many of you had managed to read the paper, but it's

26
00:02:24.000 --> 00:02:26.000
only about a page and a half. This should be pretty easy.

27
00:02:26.000 --> 00:02:32.000
I figured we'll I'll just share this thing. I can quickly walk through the some of the

28
00:02:32.000 --> 00:02:36.000
use cases and then kind of start working through the agenda.

29
00:02:36.000 --> 00:02:39.000
Our agenda is kind of hacked today. So we'll need to really stay on point because I really

30
00:02:39.000 --> 00:02:43.000
want us to walk out of this meeting with sunset.

31
00:02:43.000 --> 00:02:49.000
So when they do you know what we're going to do. But I guess without further ado, let's

32
00:02:49.000 --> 00:02:57.000
start working through it. So I guess some of the biggest problems that I've seen by looking

33
00:02:57.000 --> 00:03:05.000
at the vulnerability hubs and through Bucks star is that our players have found ways to

34
00:03:05.000 --> 00:03:11.000
access native functions of our games. Those are the typical reserved for scripts and the

35
00:03:11.000 --> 00:03:15.000
use that access to create exploits various exploits.

36
00:03:15.000 --> 00:03:22.000
Some of the biggest ones are adding items. For example, they would you know, be able to

37
00:03:22.000 --> 00:03:26.000
claim rewards for participating in the race even though they haven't participated in

38
00:03:26.000 --> 00:03:34.000
racing. We don't have the context to validate. Then the player teleporting is a common one

39
00:03:34.000 --> 00:03:38.000
where a player could teleport themselves out on the map and teleport themselves around

40
00:03:38.000 --> 00:03:43.000
other players or teleport other players in front of their cross-air students to instantly

41
00:03:43.000 --> 00:03:48.000
kill them. Spawning is kind of a should probably be a category of its own because there's

42
00:03:48.000 --> 00:03:54.000
so many exploits that are related to beard kind of spawning. We know that people have spawned

43
00:03:54.000 --> 00:04:00.000
chef, your character chef, the Nardio. They spawn cages and other players and cage them

44
00:04:00.000 --> 00:04:07.000
in one spot. People have spawned vehicles that weren't supposed to spawn or have access

45
00:04:07.000 --> 00:04:16.000
to doing like a free mode and things like that. The spawned, there was one interesting use

46
00:04:16.000 --> 00:04:23.000
cave which I thought was funny is they spawned 500s under other players causing them to

47
00:04:23.000 --> 00:04:29.000
ragged all and lose control. Then it's actually kind of even worse like some players were

48
00:04:29.000 --> 00:04:34.000
able to spawn explosions and damage other players and then things like that. I sort of feel

49
00:04:34.000 --> 00:04:40.000
like spawning is probably one of the most important use cave that we can probably address.

50
00:04:40.000 --> 00:04:46.000
Some of the left-hand ones are potential left-hand ones. This time of day and weather changes.

51
00:04:46.000 --> 00:04:51.000
Some content is intended to play at night, makes it easier if you change your time of day

52
00:04:51.000 --> 00:04:58.000
today. It will make farming content for awards a lot easier and I guess the players can

53
00:04:58.000 --> 00:05:08.000
play the content not the way it's intended. Sorry, my cat is once it's on attention.

54
00:05:08.000 --> 00:05:14.000
The other interesting one was the player was able to change their model to a wolf. Some

55
00:05:14.000 --> 00:05:19.000
started calling it wolfing. They changed themselves into a wolf and they sort of gained their

56
00:05:19.000 --> 00:05:26.000
ability in a smaller hitbox. They're running on much faster too. Then this is very similar

57
00:05:26.000 --> 00:05:35.000
to the first youth cave where Avatar, they have the devine for a call for periodic and

58
00:05:35.000 --> 00:05:43.000
seasonal awards where you work towards a certain goal over a period of time. Then you get

59
00:05:43.000 --> 00:05:51.000
a certain award because of that. With the way our networking is right now, what I understand

60
00:05:51.000 --> 00:05:59.000
is that might be wrong but what I understand is that we need to safeguard the gameplay

61
00:05:59.000 --> 00:06:05.000
that players actually indeed are participating properly in those activities in order to gain

62
00:06:05.000 --> 00:06:13.000
those rewards. Otherwise it kind of undermines the entire progression system.

63
00:06:13.000 --> 00:06:18.000
With that in mind, I'm going to end over to Daniel. Actually before I do that, does anybody

64
00:06:18.000 --> 00:06:27.000
have any questions? About the use cases? I'm assuming these are basically 100% on PC at

65
00:06:27.000 --> 00:06:32.000
this point. I don't think any of these exploits are available on console. I don't know if we

66
00:06:32.000 --> 00:06:39.000
know that. I think that's true. I think that's true. What makes it problematic is if we

67
00:06:39.000 --> 00:06:45.000
launch Avatar with crossplay, I'm sure you're not exploits on PC, we'll propagate into

68
00:06:45.000 --> 00:06:51.000
a platform. We'll disrupt players and other platforms too. It's also based on the

69
00:06:51.000 --> 00:06:57.000
consoles that have not effectively been broken yet. We'll know if that will remain the case

70
00:06:57.000 --> 00:07:14.000
later on. Any other questions? Daniel, do you have a call for?

71
00:07:14.000 --> 00:07:20.000
Sure. I guess one of the things we were hoping we could talk about this time as well is

72
00:07:20.000 --> 00:07:27.000
like, obviously, we've got a few different use cases here and we expect in the future

73
00:07:27.000 --> 00:07:34.000
that we'll need to add new ones to it as well. I thought it would be nice to have a good

74
00:07:34.000 --> 00:07:41.000
chat about how it gets some ideas from the group about how we could make an expandable

75
00:07:41.000 --> 00:07:50.000
framework for these sorts of things rather than doing a lot of the spoke fixes for individual

76
00:07:50.000 --> 00:07:55.000
exploits. It might be that some of these are slightly different. Obviously, there's big

77
00:07:55.000 --> 00:08:01.000
differences between the awards, the first item and the last item and maybe some of the

78
00:08:01.000 --> 00:08:06.000
others. Maybe there's slightly different types of exploits. I guess it's just more thinking

79
00:08:06.000 --> 00:08:13.000
about how what system like this would look like. Not exactly how it would be implemented,

80
00:08:13.000 --> 00:08:20.000
but just at a very high level, how we could see this sort of thing working. Maybe what

81
00:08:20.000 --> 00:08:25.000
we could do is we do have these two categories. We've got things that are a bit more like using

82
00:08:25.000 --> 00:08:33.000
extra knowledge to validate transactional processes and other things that are more like getting

83
00:08:33.000 --> 00:08:42.000
permission to actually create objects. I thought maybe that would be a good way to start.

84
00:08:42.000 --> 00:08:51.000
I was hoping to lean obviously along Alan Ray because the most about how all the end

85
00:08:51.000 --> 00:08:59.000
dance, how things work, service side really for that.

86
00:08:59.000 --> 00:09:05.000
I think Danny mentioned a couple of, like I'd consider them like categories of things

87
00:09:05.000 --> 00:09:10.000
you might want to figure out how we brace against. I guess not brace against how we might

88
00:09:10.000 --> 00:09:20.000
solve some issues. Asking for permissions is obviously different than asking for forgiveness.

89
00:09:20.000 --> 00:09:28.000
Some of these are just the awards could potentially be about asking for permission. Creating items

90
00:09:28.000 --> 00:09:34.000
could be about asking for permissions. Other of these maybe ones that we just want to track.

91
00:09:34.000 --> 00:09:38.000
I guess maybe in a first iteration or some of these maybe we want to track. It depends

92
00:09:38.000 --> 00:09:44.000
on how we want to start and where we'd like to go.

93
00:09:44.000 --> 00:09:48.000
I guess as well there's other categories of things like what data we need to track and

94
00:09:48.000 --> 00:09:54.000
what the mechanism for getting that data in, like say if we want to associate knowledge

95
00:09:54.000 --> 00:10:00.000
about what assets can be created within content for example. So if there's a cage we know

96
00:10:00.000 --> 00:10:09.000
only this mission creates this cage and then maybe for awards like what content are associated.

97
00:10:09.000 --> 00:10:13.000
Like I don't think at the moment any of the awards have met a data that associates

98
00:10:13.000 --> 00:10:18.000
them with content. Is that right? They're just more the data about the items you get with

99
00:10:18.000 --> 00:10:22.000
the awards. Is that right for the current state?

100
00:10:22.000 --> 00:10:24.000
I don't know. That's correct.

101
00:10:24.000 --> 00:10:30.000
That's correct. Yeah. The words currently are not to find out with how they're supposed

102
00:10:30.000 --> 00:10:35.000
to be gotten. There is some metadata like there are award to award dependencies. Like you

103
00:10:35.000 --> 00:10:42.000
cannot get the level three award unless you have already got the level two award. So there

104
00:10:42.000 --> 00:10:48.000
are ways there's some ways that you know using information that is available directly

105
00:10:48.000 --> 00:10:56.000
on server. We can enforce some basic correctness. But yeah, it's not a it's not like the game

106
00:10:56.000 --> 00:11:00.000
client where they don't put much all state that's available for a number to check before

107
00:11:00.000 --> 00:11:03.000
you like to claim something like that.

108
00:11:03.000 --> 00:11:07.000
And the other aspect is what state is will potentially be on other servers that we might

109
00:11:07.000 --> 00:11:14.000
need to use like for example if session server knows what content people are running which

110
00:11:14.000 --> 00:11:20.000
will be the case for some things and not others. I believe at the moment you know other

111
00:11:20.000 --> 00:11:26.000
other things like I mean are we still going to have a bounty server in America's for example.

112
00:11:26.000 --> 00:11:31.000
I should probably know the answer to that. But what is the current plans on that? Do

113
00:11:31.000 --> 00:11:37.000
we still have one or are we? We don't. Yeah. So we're not. Okay. Or many and many games

114
00:11:37.000 --> 00:11:42.000
as well as that at the moment the plans not to have anything like that.

115
00:11:42.000 --> 00:11:48.000
Yeah. So like if there are reasons to develop a mini game. Yeah. Right now I don't think

116
00:11:48.000 --> 00:11:54.000
we've released a mini because the other aspect of the expandable framework that I was

117
00:11:54.000 --> 00:11:59.000
quite interested in is how you see it working like if it does involve like server to server

118
00:11:59.000 --> 00:12:04.000
or you know that there's those aspects of it like like how do you how would you imagine

119
00:12:04.000 --> 00:12:11.000
it at a very high level being architected. I'd say to there's there's a couple of broad

120
00:12:11.000 --> 00:12:16.000
categories of systems we can build. Yeah. There's one that that's basically just observing

121
00:12:16.000 --> 00:12:23.000
and and logging. There's another category which is somehow reporting and what it's reporting

122
00:12:23.000 --> 00:12:27.000
to. I don't know. I don't know. I've got another servers reporting the game. Yeah. And

123
00:12:27.000 --> 00:12:32.000
there's another one which is executing something doing something about you know about yeah

124
00:12:32.000 --> 00:12:36.000
various types of enforcement where it's kicking players off or invalidating their ticket

125
00:12:36.000 --> 00:12:41.000
or what things like that. So yeah. I think we looking at it from those categories. I imagine

126
00:12:41.000 --> 00:12:46.000
to start we might want to consider building just an observer you know just in the basic

127
00:12:46.000 --> 00:12:52.000
that makes observations and log in and then next start thinking about how we build the other

128
00:12:52.000 --> 00:12:58.000
types of other categories of systems on top of it which are reporting to other other

129
00:12:58.000 --> 00:13:04.000
servers or the game and then we last last but not least doing something about things. Yeah.

130
00:13:04.000 --> 00:13:11.000
So sort of the authority we give the system I think in a broad broader sense. That sounds

131
00:13:11.000 --> 00:13:17.000
good. I mean I obviously understand that that have to be a lot of work to come up with

132
00:13:17.000 --> 00:13:22.000
a proper design and technical design and all that. So yeah so like you say I was just like

133
00:13:22.000 --> 00:13:28.000
very high level you know like before we start how we imagine that roughly it will work.

134
00:13:28.000 --> 00:13:32.000
You know I mean like a very like you know it's back of an envelope sort of thing as in like

135
00:13:32.000 --> 00:13:37.000
this is on our current understanding with what we know about the current systems we have.

136
00:13:37.000 --> 00:13:42.000
This is how we start thinking about this if we were to start going into it in more detail.

137
00:13:42.000 --> 00:13:48.000
So yeah that sounds good. Okay. Yeah. And then I think figuring and then the next thing would be

138
00:13:48.000 --> 00:13:56.000
to your point. How do we get this data? Yeah. How do we know how are we able to execute or how

139
00:13:56.000 --> 00:14:05.000
are we able to determine what data we need and then aggregating it or you know we've

140
00:14:05.000 --> 00:14:09.000
got some sort of rules around things or rule sets it feels like that's a good piece of

141
00:14:09.000 --> 00:14:16.000
this is. Yeah. Doing what data you need. Yeah. You have to be able to determine what's what's

142
00:14:20.000 --> 00:14:25.000
I don't want to call it a violation but what is sort of this state that triggers something.

143
00:14:25.000 --> 00:14:31.000
Yeah. A logging event or whatever. I feel like that's the other piece of this is you know it is

144
00:14:31.000 --> 00:14:36.000
basically a state machine at some point and easy to build us. Gather the data needs to

145
00:14:37.000 --> 00:14:43.000
be able to determine the state of a player or players or the game effectively and then add. Yeah.

146
00:14:45.000 --> 00:14:49.000
Yeah because one thing I was quite keen is obviously like you say to start whether we want to start

147
00:14:49.000 --> 00:14:53.000
small just to get some it going and maybe even for launch it would be small like a like we've

148
00:14:53.000 --> 00:14:57.000
talked about in the past maybe it would just be logging initially or maybe even just tracking

149
00:14:57.000 --> 00:15:02.000
data and doing nothing either even is another option but yeah. One thing I thought might be quite

150
00:15:02.000 --> 00:15:08.000
cool is like think about even if we imagine we'd track two things like maybe two things that maybe

151
00:15:08.000 --> 00:15:15.000
say just for argument sake we did the game client the awards tracking you know based on content and

152
00:15:17.000 --> 00:15:21.000
object sporting say if we use that it's imagine if we did that I'm not saying those are the ones

153
00:15:21.000 --> 00:15:26.000
to do but just just for sake of discussion and then we could look at other ones that we've identified

154
00:15:26.000 --> 00:15:32.000
as doing potentially later down the line like time of day their model changes whatever it may be

155
00:15:32.000 --> 00:15:38.000
and then thinking about how would we fit that into this system that we're talking about making and

156
00:15:38.000 --> 00:15:43.000
would it does it fit or does it or would it need a lot of additional work just and that that was

157
00:15:43.000 --> 00:15:48.000
kind of what's thinking in terms of making an example kind of proving that we're designing an

158
00:15:48.000 --> 00:15:52.000
expandable framework because there is going to be a lot of things obviously even if we come up with

159
00:15:52.000 --> 00:15:57.000
a quite comprehensive list based on what we see people doing in GCOnline at the moment

160
00:15:58.000 --> 00:16:02.000
we know the people are going to do things we haven't thought of if they're not doing it even today

161
00:16:02.000 --> 00:16:10.000
they're going to do it later down the line so you know. Sorry I'm sorry I missed this but are we

162
00:16:10.000 --> 00:16:18.000
talking about tracking both players in session state because I think there's a difference right.

163
00:16:18.000 --> 00:16:24.000
What's the current session in like time of day is more of a session based thing versus

164
00:16:24.000 --> 00:16:31.000
player specific right or you mean like content state I guess yeah yeah yeah yeah that's why I was

165
00:16:31.000 --> 00:16:36.000
kind of thinking it's like it probably it would be it would be both I mean like if you're creating

166
00:16:36.000 --> 00:16:42.000
a spawning for example ideally we'd know it obviously depends our four we want to go with it we

167
00:16:42.000 --> 00:16:47.000
could even say if you're in this content you're allowed to explore an explosion if you're not

168
00:16:47.000 --> 00:16:52.000
you aren't it's not expected but then you could also when we've talked about it before with a few

169
00:16:52.000 --> 00:16:57.000
of us just just like spitballing ideas it's been like maybe having checkpoints in the content way

170
00:16:57.000 --> 00:17:03.000
so you know we not only do we know that you're playing content but you're we know what stage you're

171
00:17:03.000 --> 00:17:08.000
out in the content and then we could associate what you're allowed to do at the different stages so

172
00:17:08.000 --> 00:17:12.000
and that's another part of it being expandable it's like maybe maybe initially we if if everybody

173
00:17:12.000 --> 00:17:17.000
agreed that was a good idea maybe we wouldn't have checkpoints to start with and we'd add it late

174
00:17:17.000 --> 00:17:23.000
so you know so things like that yeah I think that's like the point is getting some kind of let's just

175
00:17:23.000 --> 00:17:29.000
calm entities that we can manage on a server whether it's session or player yeah have the two of them

176
00:17:29.000 --> 00:17:34.000
communicating in some way yeah just understanding what we're expecting more knowledge and what's

177
00:17:34.000 --> 00:17:39.000
happening in the game right as is that we can visit a bit of things the other thing that

178
00:17:39.000 --> 00:17:44.000
always comes to mind me is the arbitration of who's correct right if one person says the time of

179
00:17:44.000 --> 00:17:50.000
days day and one person says night who's the actual correct yeah yeah yeah corroborating the truth

180
00:17:50.000 --> 00:17:55.000
right so if you have two people in a session when says day one says night who is the person who is

181
00:17:55.000 --> 00:18:01.000
right yeah then how do we figure that out so it's kind of a guide session I'm not trying to poke holes

182
00:18:01.000 --> 00:18:10.000
and I'm just trying to stay I know yeah exactly yeah yeah I kind of thought I wasn't really sure how to

183
00:18:10.000 --> 00:18:16.000
kind of bring it up but I think it kind of goes on what you're saying Dan see us that like we've

184
00:18:16.000 --> 00:18:20.000
got some state that server authority like what session are you in because you have to match make

185
00:18:20.000 --> 00:18:25.000
to get into that session right so we can trust that and we got a whole lot of state that's on the

186
00:18:25.000 --> 00:18:31.000
client that we really can't trust yeah and I see some of what we want to do here as a way of

187
00:18:31.000 --> 00:18:38.000
extending the small amount of server-thoroughtative ration that we do have so that we can try to

188
00:18:38.000 --> 00:18:44.000
cover some more things even though up to this they're technically on the client but by using

189
00:18:44.000 --> 00:18:50.000
something clever like a sign token along with things that we do trust maybe we can start to

190
00:18:50.000 --> 00:18:54.000
cover some of the other things there they are still on the client and it can be expandable and

191
00:18:54.000 --> 00:19:00.000
iterative like like as an example with this idea you could one thing you could do eventually not

192
00:19:00.000 --> 00:19:05.000
not saying you do this for launch but for time of day you could we could associate stages of

193
00:19:05.000 --> 00:19:12.000
content where the time of day changes to to new and say clear weather and then really we don't say

194
00:19:12.000 --> 00:19:17.000
tell everybody change to new to clear weather we just say move to state three and everybody

195
00:19:17.000 --> 00:19:23.000
understands on that in their content that as part of moving to state three this is the time and

196
00:19:23.000 --> 00:19:27.000
weather you know do you not mean so it's yeah just like that we could do as well we kind of took

197
00:19:27.000 --> 00:19:33.000
this approach for cash inventory right because we need yeah the version zero of cash inventory

198
00:19:33.000 --> 00:19:39.000
is on PC which is just the mother mayi server yeah with custom transactions for the things we wanted to

199
00:19:39.000 --> 00:19:45.000
we could do something akin to that for stepping into this also yeah right where we put all the

200
00:19:45.000 --> 00:19:49.000
bells and whistles in place to let the server kind of at least be keep up with what's going on

201
00:19:49.000 --> 00:19:56.000
and then and not not throw too many errors initially and kind of back into it yeah I think

202
00:19:56.000 --> 00:20:03.000
another thing that's different now we have dcls so we know when you're in our session and we see

203
00:20:03.000 --> 00:20:10.000
a player doing something we know that for sure that's that player and we can get tokens that say yes

204
00:20:10.000 --> 00:20:16.000
we were definitely in a session with that person so I think in the past some things that we could

205
00:20:16.000 --> 00:20:21.000
done like reporting on other players doing things wouldn't have been very practical because you could

206
00:20:21.000 --> 00:20:26.000
just send a message you just jaren garbage about players that weren't even in your session and and

207
00:20:26.000 --> 00:20:34.000
now we could have a player who has has a certificate sign a token along with a an API call it says

208
00:20:34.000 --> 00:20:39.000
do this and now you've got a token that proves that that player was in your session and they asked

209
00:20:39.000 --> 00:20:46.000
to do a thing and we can report that the server can actually trust that it's a genuine it originated

210
00:20:46.000 --> 00:20:57.000
from that other players box instead of being just spooked right next to yeah yeah I know that's

211
00:20:57.000 --> 00:21:03.000
not sounds not sounds right a good so kind of I also wonder if there's a game needs to connect

212
00:21:03.000 --> 00:21:08.000
like I wonder if we have a version where we base everything on session server and cash in

213
00:21:08.000 --> 00:21:12.000
return we can build all the state without the game having to connect this or does the game need

214
00:21:12.000 --> 00:21:19.000
to be always connected or you know I'm wondering about the mechanism for the games involvement in

215
00:21:19.000 --> 00:21:25.000
early versions of this yeah if we build it without the game being connected are we doing ourselves

216
00:21:25.000 --> 00:21:31.000
a disservice or are we doing or are we doing the right thing you know I don't know if we can trust

217
00:21:31.000 --> 00:21:36.000
the game in many situations what's the value of having a game being connected all the time if the

218
00:21:36.000 --> 00:21:43.000
game just give us a token or something with it's the state the server already sort of

219
00:21:45.000 --> 00:21:49.000
if the server tells the game here's your state with a sign token and then the game hands

220
00:21:49.000 --> 00:21:55.000
that to us we can compare that to what the game is telling us I suppose but that might not

221
00:21:55.000 --> 00:21:59.000
being really complicated I'm not sure I'm just trying to think through sort of the mechanism by

222
00:21:59.000 --> 00:22:04.000
which we're able to try what level are we able to trust the game and how level are we able to

223
00:22:04.000 --> 00:22:09.000
corroborate what it's telling us there's a few things we could do to help with that a little bit like

224
00:22:10.000 --> 00:22:16.000
generally content even on the client has a concept of a host a content host or a script host

225
00:22:16.000 --> 00:22:20.000
so we could we could have knowledge of that so we we would know that we only expect the host to make

226
00:22:20.000 --> 00:22:26.000
certain types of requests we could also do things like we could look at this might be complicated

227
00:22:26.000 --> 00:22:32.000
but we could we could make we could look into expected time periods to go between different

228
00:22:32.000 --> 00:22:37.000
checkpoints and things like that so we could do more for the day but realistically I think I

229
00:22:37.000 --> 00:22:42.000
kind of feel like we need to think about this as like making things better than we are

230
00:22:42.000 --> 00:22:47.000
pre-economic core and games but not perfect like because it's not we're not going full clients

231
00:22:47.000 --> 00:22:52.000
over authoritative so it is the organ we're still going to have some limitations where we're

232
00:22:52.000 --> 00:22:56.000
because we're trusting the clients but it's just about trying to tighten things up a little bit

233
00:22:56.000 --> 00:23:03.000
and then hopefully we can keep tightening up you know the worst issues as with you know and it's

234
00:23:03.000 --> 00:23:09.000
a pathway to becoming more server authoritative maybe further down the line as well post launch if

235
00:23:09.000 --> 00:23:17.000
that's something we want to do yeah is creating like forcing a connection to you know persist in

236
00:23:17.000 --> 00:23:25.000
connection to say it's like observation server is that how big of an issue is it it's the number of

237
00:23:25.000 --> 00:23:32.000
connections number and the amount of bandwidth that it'll incur so we so we always I feel like

238
00:23:32.000 --> 00:23:37.000
we're always trying to be very very deliberate about why we require persistent connection what

239
00:23:37.000 --> 00:23:44.000
applies us sure I mean it's kind of moving on to a later topic in the on the agenda but just

240
00:23:44.000 --> 00:23:50.000
as a quick question you and before Red Dead came out we were talking about the anti-cheats server

241
00:23:50.000 --> 00:23:56.000
being required connection did was it required connection in the end or not does anybody know

242
00:23:58.000 --> 00:24:05.000
I don't know I believe it was but I don't know memories yeah because you know because the other

243
00:24:05.000 --> 00:24:12.000
thing is obviously I'm not even sure what the anti-cheats server is doing to be honest on Red Dead

244
00:24:13.000 --> 00:24:18.000
so it's like whether that if we already if we've already got a required connection to a to that it

245
00:24:18.000 --> 00:24:24.000
might be that potentially anti-cheats could be expanded into that you know I don't know if about

246
00:24:24.000 --> 00:24:29.000
it it's not it's you know I mean it just conceptually I think the concept of it could be I don't

247
00:24:29.000 --> 00:24:34.000
know it it wasn't even turned on for the first two years after launch or something like that so I

248
00:24:35.000 --> 00:24:40.000
yeah it leads me to believe me there wasn't a required maybe it by turn on it wasn't doing

249
00:24:40.000 --> 00:24:44.000
anything it was there I don't know if game the game was actually connecting to it or not

250
00:24:44.000 --> 00:24:49.000
but I think the idea or the concept of it is some wonder what we're building here

251
00:24:49.000 --> 00:24:57.000
and in terms of connections you obviously we some connections we multiplex or as are you talking

252
00:24:57.000 --> 00:25:03.000
about further connections beyond that I think you probably this well this depends um yeah

253
00:25:03.000 --> 00:25:10.000
yeah there's some interest in having not everything running in the same gateway

254
00:25:10.000 --> 00:25:21.000
yeah just for scalability and protection against um you know it certainly scale issues yeah

255
00:25:21.000 --> 00:25:27.000
uh so there's there's some interest in that oh yeah I I argue this is more than just anti-cheat

256
00:25:27.000 --> 00:25:31.000
like I think we this could be a stepping stone to a bunch of things and I think we're we're

257
00:25:31.000 --> 00:25:36.000
restricting ourselves if we consider this just anti-cheat I think the use cases we have here are

258
00:25:36.000 --> 00:25:42.000
largely around that but I think it's a stepping stone towards some could be that's a yes but

259
00:25:42.000 --> 00:25:46.000
could be a stepping stone towards something else yeah that sounds great

260
00:25:50.000 --> 00:25:55.000
awesome um yeah I mean I guess we're kind of naturally going towards that like I've

261
00:25:55.000 --> 00:26:00.000
developed with the sisters maybe this is part of what you're uh talking about Albert the other

262
00:26:00.000 --> 00:26:04.000
thing that comes to mind is his analytics if we were reporting more about what the game's doing

263
00:26:04.000 --> 00:26:11.000
then obviously um you know that's very similar to what we do with analytics as well so it's like

264
00:26:11.000 --> 00:26:16.000
we don't want to be reporting the same data multiple times to source it ought to have done

265
00:26:16.000 --> 00:26:25.000
comptry about that in a separate called uh as well and yeah ideally we set up a one place where

266
00:26:25.000 --> 00:26:31.000
the game sending data and then we are just dispatching it to the necessary listeners there's also on

267
00:26:31.000 --> 00:26:35.000
playstation that UDS system that I don't know how much we're leaning into uh so I'm talking to

268
00:26:35.000 --> 00:26:42.000
John Hinder about that a while ago as well as like like if we it'd be nice if we could do some of

269
00:26:42.000 --> 00:26:47.000
if we're sending this data server side it'd be nice to see if we could report from the server side

270
00:26:47.000 --> 00:26:53.000
rather than uh you're reporting the same data multiple times using client bandwidth it's very limited

271
00:26:54.000 --> 00:26:59.000
uh so yeah thinking about that all those things together be pretty cool um

272
00:26:59.000 --> 00:27:05.000
the initial that that they're called telemetry the client's sound accounts basically optional

273
00:27:06.000 --> 00:27:12.000
right and somebody can turn off the telemetry on the router I think that was the idea I don't

274
00:27:12.000 --> 00:27:15.000
if you remember how I think it was the idea with anti-cheat really wasn't it because

275
00:27:15.000 --> 00:27:19.000
it was to black hole the telemetry and that was one of the ideas of having it persistent connect

276
00:27:19.000 --> 00:27:24.000
a required connection was it was effectively used for cheat telemetry wasn't it yeah I think

277
00:27:24.000 --> 00:27:30.000
that was the what the goal was to that required connection was that you couldn't just just connect

278
00:27:30.000 --> 00:27:34.000
boot of the game download any content and disappear I think that was the

279
00:27:36.000 --> 00:27:44.000
yeah the primary goal yeah I think for for for me I you know my my my kind of goes back to what

280
00:27:44.000 --> 00:27:50.000
Dan Conti was initially trying to break things down earlier which is there's players progression state

281
00:27:50.000 --> 00:27:58.000
and then there is the player state or you know the the the session state uh in in some capacity right

282
00:27:58.000 --> 00:28:04.000
um so far I think um it's you know was far from perfect the inventory server does a good job from

283
00:28:04.000 --> 00:28:14.000
uh of like preventing you know really trivial exploits um of of like player progression state

284
00:28:14.000 --> 00:28:20.000
um but there also has been some discussion like oh can we bring like a challenge server in right

285
00:28:20.000 --> 00:28:27.000
like um that the focus is on uh you completing uh achievements and challenges and you know

286
00:28:28.000 --> 00:28:34.000
uh and using that information to stop people from you know potentially reclaiming the same awards

287
00:28:34.000 --> 00:28:42.000
but that that's just one factor of uh you know instead of instead of saying uh but that's that's

288
00:28:42.000 --> 00:28:47.000
just one aspect of claiming awards right like claiming awards can be you know you completing

289
00:28:47.000 --> 00:28:53.000
challenges but also can be you just doing day-to-day you know um defeating in that defeating an

290
00:28:53.000 --> 00:29:00.000
enemy kind of thing right um so all that stuff really then depends on um what is active in the session

291
00:29:01.000 --> 00:29:11.000
and um I think the you know without if we don't try to think about uh doing something completely

292
00:29:11.000 --> 00:29:18.000
server or authoritative then it's really about the client reporting their state to us or um a session

293
00:29:18.000 --> 00:29:23.000
gets initialized with some so like so there so you know the session server um uh uh

294
00:29:25.000 --> 00:29:29.000
and then you know not to be confused with seamless sessioning but like some kind of session state

295
00:29:29.000 --> 00:29:34.000
server uh would not only keep track of the player positions that they reported but also like

296
00:29:34.000 --> 00:29:42.000
when a session starts then the session state is initialized and then some and then I guess the host

297
00:29:42.000 --> 00:29:47.000
can report like the initial state right um and then given the initial state you know we can set

298
00:29:47.000 --> 00:29:53.000
a sequence of rules to say you know if we want to enforce it then we can set a sequence of rules to

299
00:29:53.000 --> 00:29:58.000
say but you know are you allowed to transition from like you know uh morning to night in like you

300
00:29:58.000 --> 00:30:08.000
know you know two milliseconds or whatever yeah um or uh hey um uh uh for all the players that are

301
00:30:08.000 --> 00:30:14.000
connected to this particular session you know are you guys in a reasonable place are you guys teleporting

302
00:30:14.000 --> 00:30:24.000
around are you are are you guys uh you know is is is is there is this little store here robbed or not

303
00:30:24.000 --> 00:30:31.000
or whatever right so like um we we base so at the at the at the minimum I think that that's

304
00:30:31.000 --> 00:30:34.000
that's probably the biggest missing piece we have which is which is something that can store

305
00:30:35.000 --> 00:30:40.000
server state of a session on the server besides you know kind of like player positioning yeah

306
00:30:41.000 --> 00:30:46.000
it's also like um okay I mean it goes in going into the workflow side of it as well I think

307
00:30:47.000 --> 00:30:53.000
we also need to get the content teams to like be more less loose with some of the things they do

308
00:30:53.000 --> 00:31:00.000
like on on GT online and reds online you can just walk people around for example it's huge uh

309
00:31:00.000 --> 00:31:05.000
with any way you want and there's nobody's probably not one person in the company who knows all

310
00:31:05.000 --> 00:31:09.000
the different reasons that script is warping people around the map so obviously that makes it very

311
00:31:09.000 --> 00:31:15.000
hard to like validate so like we I think probably what we want to do is we'll we'll we'll need them to

312
00:31:15.000 --> 00:31:21.000
effectively create like like a description of what the things that they are doing in these in

313
00:31:21.000 --> 00:31:27.000
these in their content that that we can validate like so we know what to expect and you know we

314
00:31:27.000 --> 00:31:32.000
can we could lock that down as much so I could he could even as far as even going as far as saying

315
00:31:32.000 --> 00:31:36.000
these are the places on the map but this is where we're going to walk people you know so you we

316
00:31:36.000 --> 00:31:41.000
know what we can what we're how the sorts of ways we're expecting players to be moved about or

317
00:31:41.000 --> 00:31:46.000
as at the moment effectively there's nothing we can anybody can do it and we we can't even tell

318
00:31:46.000 --> 00:31:51.000
the difference between scripts warping the player about and and somebody hacking their client

319
00:31:51.000 --> 00:31:59.000
to wolf themselves about I think that goes to what Alice probably saying earlier about just kind

320
00:31:59.000 --> 00:32:04.000
of almost like logging or observing everything is there because I imagine there's probably other

321
00:32:04.000 --> 00:32:10.000
use cases we don't know about yeah don't yet know about and look just even just having an

322
00:32:10.000 --> 00:32:16.000
understanding by each time person is warping around it's happening would probably give us that

323
00:32:16.000 --> 00:32:25.000
in that but you're right it's like figuring out how that affects a content creation process too it's

324
00:32:26.000 --> 00:32:30.000
from a workflow point of view the sort of way I could see it working quite well is that we let

325
00:32:30.000 --> 00:32:36.000
them develop and there's there's no limitations in a way they do what what they're doing and then we

326
00:32:36.000 --> 00:32:42.000
have a mode where you can run and it will do the validation and maybe it's like more warnings or

327
00:32:42.000 --> 00:32:47.000
or maybe it just outputs the things that's detecting and then they they could use that to configure

328
00:32:47.000 --> 00:32:53.000
their their matter day because obviously the the issue is going to be we don't want to like slow down

329
00:32:53.000 --> 00:32:59.000
iteration time for people and or like it will get it gets quite fast paced when for that for those

330
00:32:59.000 --> 00:33:04.000
teams when there's review plays they'll be in the sort of feedback they get is move the move this

331
00:33:04.000 --> 00:33:09.000
slightly over here move that over there do this change this model to that model or a lot of these

332
00:33:09.000 --> 00:33:14.000
things were talking about potentially protected they're they need they need they need to be able to

333
00:33:14.000 --> 00:33:18.000
we don't want to put barriers up for those people so we'll need to make sure that

334
00:33:19.000 --> 00:33:25.000
that we we come up with a good way and I think I mean I've seen that a little bit even with

335
00:33:25.000 --> 00:33:31.000
the catalog authoring it it adds a bit of friction so we don't want to add more friction when it's

336
00:33:31.000 --> 00:33:35.000
unnecessary in my opinion like we could we could let them do these things and then as long as we

337
00:33:35.000 --> 00:33:40.000
validate it maybe when a build is released we could require that things are configured properly

338
00:33:40.000 --> 00:33:45.000
and uploaded but maybe during development iteration and review play builds we could be a bit

339
00:33:45.000 --> 00:33:52.000
elusive so that people can try out content without having you know those problems I don't know

340
00:33:52.000 --> 00:33:57.000
what people think about that idea but yeah I think this goes to a point I was thinking about it's

341
00:33:57.000 --> 00:34:05.000
really easy to build a really rigid state machine and there's two I think there's two vectors here

342
00:34:05.000 --> 00:34:12.000
one is what what does the state machine do is it just is it checkpoints we track and it seems like

343
00:34:12.000 --> 00:34:17.000
a slippery slope towards building a lot of the gameplay logics recreating a lot of the gameplay

344
00:34:17.000 --> 00:34:23.000
logic server side and you know what so what what is this to me there's the other question which

345
00:34:23.000 --> 00:34:27.000
I don't know if we need to answer now but what are we building is it something that basically has

346
00:34:27.000 --> 00:34:32.000
checkpointing logic and at checkpoints it validates the state it the state that it knows against

347
00:34:32.000 --> 00:34:37.000
expected state and is that okay yeah or something lighter weight than that and then the the

348
00:34:37.000 --> 00:34:43.000
state machine itself it's like I said it's super easy to evolve harry been there where you're

349
00:34:43.000 --> 00:34:46.000
building some kind of state machine you have all this crazy branching logic and you're you're

350
00:34:46.000 --> 00:34:53.000
trying to predict things that kind of goes down that slippery slope to building those you know

351
00:34:53.000 --> 00:34:59.000
effectively all the game logic right like it's really hard to keep in sync it's this yeah what do we

352
00:34:59.000 --> 00:35:03.000
what do we what do we need to build I think in order to at least get our basic use case off of

353
00:35:03.000 --> 00:35:08.000
round without restricting ourselves from building future use cases and if we did checkpoints what

354
00:35:08.000 --> 00:35:12.000
one thing I was going to say is that I kind of feel like the benefits we get from checkpoints I don't

355
00:35:12.000 --> 00:35:18.000
think we should try and do to like that like literally track replicate the state machine from

356
00:35:18.000 --> 00:35:24.000
script in my opinion but the way I was kind of seeing is it's more about reducing windows for abuse

357
00:35:24.000 --> 00:35:29.000
so if you've got some content that lasts for half an hour it obviously first pass could be

358
00:35:29.000 --> 00:35:33.000
when you're running this content you can create any explosions you like you can create any cages

359
00:35:33.000 --> 00:35:38.000
you like you can walk the players where any you like ever you like that means that whenever that

360
00:35:38.000 --> 00:35:43.000
content running we can't really protect against those things whereas if we had it is effectively

361
00:35:43.000 --> 00:35:48.000
like stages of the mission so not not necessarily a state machine or a flow but it's like you're in

362
00:35:48.000 --> 00:35:52.000
the intro flow of the mission we know that in the intro flow of the mission we've got a cutscene

363
00:35:52.000 --> 00:35:57.000
where we create a cage okay cool if you're in the intro you can do that but only last for three

364
00:35:57.000 --> 00:36:03.000
minutes then we've narrowed the window from 30 minutes to three to three minutes that was kind of

365
00:36:03.000 --> 00:36:08.000
why I was thinking how I was thinking we could get a bit of extra value and then similarly like

366
00:36:08.000 --> 00:36:14.000
time period like if like so we could stop people like farming things like by by just spamming like

367
00:36:14.000 --> 00:36:19.000
checkpoint progressions we could we could say we know that this content takes 30 minutes we know

368
00:36:19.000 --> 00:36:25.000
that these checkpoints take X minutes some tolerance so if the client is the one reporting what stages

369
00:36:25.000 --> 00:36:31.000
they're at so for arguments sake you could basically say you know they're to go into fast so it's

370
00:36:31.000 --> 00:36:34.000
like an almost like another version of rate limiting at that point it just slows them down

371
00:36:35.000 --> 00:36:39.000
and then keep feeling was kind of saying then that makes it a bit more like botting rather than

372
00:36:39.000 --> 00:36:45.000
the proponents we've got today which is which is it is a good would be a good stuff for it yeah I

373
00:36:45.000 --> 00:36:50.000
think you said something there that I was thinking too which is rate limiting I think the rate

374
00:36:50.000 --> 00:36:56.000
limit is meant to do that I think it's really hard to author appropriate rate limits yeah because

375
00:36:56.000 --> 00:37:02.000
you don't know how long something should take or how long this should be able to you know how long

376
00:37:02.000 --> 00:37:06.000
something should take or when you should enable them to do it again or things like that without knowing

377
00:37:06.000 --> 00:37:12.000
what the gameplay behavior is like if we're to do this in this estimate it's it's a little bit of

378
00:37:13.000 --> 00:37:19.000
always having to know what what the gameplay behavior is and seeing those those check points

379
00:37:19.000 --> 00:37:26.000
as a challenge I think yeah and I mean and that's where like the the workflow and the authoring

380
00:37:26.000 --> 00:37:31.000
would become more complicated but one of the nice things is if if we do have like a logging option

381
00:37:31.000 --> 00:37:37.000
versus an authorisation option we could obviously one of the nice things of that is we could run it

382
00:37:37.000 --> 00:37:42.000
and see if you get absolutely spammed at all the time it's we're getting all the violations or

383
00:37:42.000 --> 00:37:47.000
whatever want to call them so you could kind of do that because obviously the other issue with

384
00:37:47.000 --> 00:37:51.000
these sorts of things it's like when people do speed runs on games they do find ways to legitimately

385
00:37:53.000 --> 00:37:57.000
get do things faster than maybe it's designed to do and obviously you don't want to necessarily

386
00:37:57.000 --> 00:38:01.000
penalize players for doing that you know we might want to know about it so we can patch it but

387
00:38:02.000 --> 00:38:08.000
you wouldn't necessarily want to flag them as cheaters if they're not cheating you know right

388
00:38:10.000 --> 00:38:14.000
one of the only good case though I'd like to let's be honest like what's the percentage of the

389
00:38:14.000 --> 00:38:23.000
players are doing that so not to say that you know that that rate limousine all that easy but I'm

390
00:38:23.000 --> 00:38:32.000
just thinking adapting I guess deciding for a system that's doable enough to accommodate for

391
00:38:32.000 --> 00:38:37.000
things like speedrunner but it's just a small bit edge case that I don't believe here.

392
00:38:38.000 --> 00:38:44.000
Kind of feels like all that sort of stuff is probably a bit beyond what the initial I know we've

393
00:38:44.000 --> 00:38:49.000
got a session to talk about what we'd want to do first but it's like it's kind of it feels like

394
00:38:49.000 --> 00:38:55.000
it'd be a little bit beyond that like in my opinion I kind of feel like just doing things like if we

395
00:38:55.000 --> 00:39:02.000
can validate that people are actually running the content awards are associated with that feels like

396
00:39:02.000 --> 00:39:07.000
a step forward like those were the cases we talked about before like are they on the right

397
00:39:07.000 --> 00:39:10.000
area of the map like like are they saying they're going fishing and there's no water there you know

398
00:39:11.000 --> 00:39:17.000
that's still that's a little bit easier to validate than those time-based things like maybe that

399
00:39:17.000 --> 00:39:22.000
would be something that would be more we're saying this is how we could see expanding the system

400
00:39:22.000 --> 00:39:27.000
in the future but it might not necessarily be what we do what we do for launch because there are a

401
00:39:27.000 --> 00:39:40.000
lot more complications with it. I don't know. So I think we've been approaching this kind of problem

402
00:39:40.000 --> 00:39:49.000
from from both ends I think throughout this meeting we're both talking about like keeping

403
00:39:49.000 --> 00:39:55.000
track of state and then and doing kind of enforcement and you know for example the rate

404
00:39:55.000 --> 00:40:03.000
limiting isn't is a is a form of enforcement like checking you know corroborating evidence from

405
00:40:03.000 --> 00:40:11.000
other servers from other state is also a form of enforcement but so I think

406
00:40:12.000 --> 00:40:18.000
Evan, Evan, Michael's and myself and I think for your others what we're talking about having a

407
00:40:18.000 --> 00:40:23.000
challenge server to keep track of like challenge states and how you can go from one challenge to

408
00:40:23.000 --> 00:40:28.000
another and have cool down so that you don't abuse challenges so you can we can also support

409
00:40:28.000 --> 00:40:33.000
things at the bottom that says you know leagues and seasons so that you know hey look you aren't

410
00:40:33.000 --> 00:40:37.000
just completely like like this this mantling this two-week version of a league because

411
00:40:38.000 --> 00:40:44.000
and getting a lot of rewards for it and stuff like that so so I think I think from that perspective

412
00:40:44.000 --> 00:40:50.000
there's already sort of somewhat concrete thing that we can tackle on like the you know

413
00:40:50.000 --> 00:40:54.000
that the challenge is in player state side like state that is independent of a session

414
00:40:54.000 --> 00:41:02.000
um but I think the fundamental uh uh saying we're lacking to be able to enforce a lot of

415
00:41:02.000 --> 00:41:09.000
the things on the earlier part of this document is just a session state and so even I think even

416
00:41:10.000 --> 00:41:15.000
um even before we talk about enforcement we need to start collecting this information and

417
00:41:15.000 --> 00:41:19.000
why now we don't really have ways of doing that we we have player position and maybe like you

418
00:41:19.000 --> 00:41:24.000
know what mission you're playing um so so I think I think for starters let's we should figure out

419
00:41:24.000 --> 00:41:30.000
which identify um what session state information that we do already have like independent of whether

420
00:41:30.000 --> 00:41:35.000
we trust them or not like how how much of them is available to us on the server um and what else do

421
00:41:35.000 --> 00:41:41.000
we try and you to try to get from the client or do we do what would it be really beneficial to

422
00:41:42.000 --> 00:41:47.000
firstly really get from the client and and I know what how often those rates updates or whatever

423
00:41:47.000 --> 00:41:51.000
yeah I was kind of thinking similarly but I was thinking we could we could come up with some

424
00:41:51.000 --> 00:41:57.000
initial use cases and then do exactly what you said but but I still attack a little from both ends

425
00:41:57.000 --> 00:42:04.000
like but but very broad strokes like not not trying like do it exactly how it's going to be code

426
00:42:04.000 --> 00:42:08.000
but just get an idea and say this is roughly what we're thinking you know to and then expand

427
00:42:08.000 --> 00:42:13.000
upon it so like like you say we could say okay we're we're going to try and tackle X and Y

428
00:42:13.000 --> 00:42:20.000
ideally different different cases like you said the player state game state what data do we need

429
00:42:20.000 --> 00:42:27.000
for that what they like say what data do we have data we don't have how do we see how do we how

430
00:42:27.000 --> 00:42:32.000
do we think we could get that data and is what's the what's the best way we can do that uh make it

431
00:42:32.000 --> 00:42:37.000
as trustworthy as possible and then and then similarly what what are we going to do with that data

432
00:42:37.000 --> 00:42:43.000
initially log maybe but then how do we check how where do how do where how do we see the validation

433
00:42:43.000 --> 00:42:48.000
working even if initially all we're doing is logging potential violation detected somewhere you know

434
00:42:48.000 --> 00:42:59.000
I don't know right so yeah so like in the case of like seasonal awards or whatever all

435
00:42:59.000 --> 00:43:05.000
uh you know given that pretty much your entire progression is tracked on on the inventory

436
00:43:05.000 --> 00:43:12.000
ish server like and anything that would trigger a state change has to come up from an API call

437
00:43:12.000 --> 00:43:19.000
which we have journaling and logging for right so in that sense we've we've we've achieved the

438
00:43:19.000 --> 00:43:25.000
first part which is you know making sure that the that the client is is actually needing to make a

439
00:43:25.000 --> 00:43:32.000
request and we understand uh what that request is and and if we are you know if even if we don't

440
00:43:32.000 --> 00:43:38.000
spend the time to uh do enforcement live like some kind of state checks or some kind of cross

441
00:43:38.000 --> 00:43:43.000
server cooperation or rate limiting we still have that information from from the client and we can

442
00:43:43.000 --> 00:43:50.000
use their clients player state and check uh using you know journaling and telemetry we like you know

443
00:43:51.000 --> 00:43:54.000
yeah is this guy cheating is this guy explaining um

444
00:43:56.000 --> 00:44:01.000
this and that is that is a a significant step forward from what we have on on what is inside of

445
00:44:01.000 --> 00:44:06.000
a session right which yeah we have we got some player position we got the mission that are playing

446
00:44:06.000 --> 00:44:11.000
we got you know maybe the the the the people that that he's hanging out with in a session yeah um

447
00:44:12.000 --> 00:44:19.000
so you know that's that's uh I think I think to to cover the other end when we need to figure out

448
00:44:19.000 --> 00:44:23.000
what what what what what what we're tracking in a session and start getting the clients to start

449
00:44:23.000 --> 00:44:27.000
reporting it but yeah what I was going to say about challenges though the the only thing that

450
00:44:27.000 --> 00:44:34.000
makes me think about this this it feels like this is more uh I'd you say it it's making it's

451
00:44:34.000 --> 00:44:38.000
making something server authoritative that should be server authoritative whereas I'm not sure

452
00:44:39.000 --> 00:44:45.000
it's actually a problem at the moment if you know what I mean like it's like I maybe I'm wrong I mean

453
00:44:46.000 --> 00:44:50.000
like all people abusing the challenges when I when I think about even on rare

454
00:44:51.000 --> 00:44:56.000
how they are okay yes yeah James done a lot of James done a lot of work to

455
00:44:57.000 --> 00:45:00.000
combat that with having to do with saves and cloud saves

456
00:45:00.000 --> 00:45:06.000
like oh yeah but that's slightly different they're right that's the thing about where they pull

457
00:45:06.000 --> 00:45:12.000
out their their cable and stop the MP cloud save going through so that they can reboot it right

458
00:45:12.000 --> 00:45:17.000
as I say when they're returning they're churning on the challenge and trying they're churning on

459
00:45:17.000 --> 00:45:22.000
the challenge and not and pulling the plugs so they can keep getting the challenge okay all right

460
00:45:22.000 --> 00:45:28.000
so now yeah the end result is for example like um we get a lot more frequent claims on agent

461
00:45:28.000 --> 00:45:34.000
charge complete award okay you know probably all right all right that's cool yeah one thing

462
00:45:34.000 --> 00:45:40.000
that I've been thinking about in this conversation and maybe it's what Dan was getting at is that uh

463
00:45:41.000 --> 00:45:46.000
there's some things that we probably don't care all that much that people cheat and there's some

464
00:45:46.000 --> 00:45:52.000
things that we really care and I think one thing I'm thinking about is what's the what's the highest

465
00:45:52.000 --> 00:45:57.000
value thing for us to prevent like we just pick one or two things that we can just stop

466
00:45:57.000 --> 00:46:04.000
maybe it I think for me I think it's like things are in a free room where one player is interfering

467
00:46:04.000 --> 00:46:09.000
with another player yeah like I know that we don't want people to just generate goal bars for

468
00:46:09.000 --> 00:46:15.000
themselves and or complete challenges or or complete missions or get money when when I'm supposed to

469
00:46:15.000 --> 00:46:21.000
but I think I think what we get dinged on the most by the public is like you you load into free

470
00:46:21.000 --> 00:46:27.000
room and then immediately you're getting okay just use like another player yeah yeah because because

471
00:46:27.000 --> 00:46:31.000
obviously your your affecting yourself by doing the the only way you're affecting other people is

472
00:46:31.000 --> 00:46:35.000
you're effectively devaluating their achievements because they're like well that guy's just

473
00:46:35.000 --> 00:46:40.000
giving himself all the things in the game and he's done no work whereas I've grind I've been

474
00:46:40.000 --> 00:46:46.000
grinding for like months to get all this stuff so it is like a second tier of all the affecting

475
00:46:46.000 --> 00:46:51.000
other players but yeah now I agree with you Phil I think the main thing the things if there was one thing

476
00:46:51.000 --> 00:46:58.000
if there were things that we really want to stop for as top priority it feels to me it's that

477
00:46:58.000 --> 00:47:05.000
that sort that those sorts of exploits would be the best ones because that's what people really

478
00:47:05.000 --> 00:47:16.000
hate the most you know something like teleporting or spawning yeah looking at this is probably the one

479
00:47:16.000 --> 00:47:23.000
of the main things that I can really the other side of it as well as like like what was in terms

480
00:47:23.000 --> 00:47:31.000
of this me it's more like like obviously we'd have other meetings relates this as well I mean

481
00:47:31.000 --> 00:47:37.000
to sort of other people but it's more like it would be good to kind of think of an expandable

482
00:47:37.000 --> 00:47:41.000
framework you know so that you know something that other things were fitting to that would be really

483
00:47:41.000 --> 00:47:46.000
cool to do because then it you know not because it's it'd be very easy I think to end up

484
00:47:47.000 --> 00:47:51.000
doing very specific fixes for things but it'd be really cool if we could come up with things that

485
00:47:51.000 --> 00:47:56.000
like somebody else said here earlier like a category of things that we wanted to

486
00:47:56.000 --> 00:48:01.000
support and maybe like how Dan Conti said it like player versus session states good way of ascribing it

487
00:48:01.000 --> 00:48:06.000
or whatever but it's just like ideally ways that if there's a new thing we it'll fit into this

488
00:48:06.000 --> 00:48:12.000
and it'll be low a bit lower effort to add new validations in in future not a shitload of development

489
00:48:12.000 --> 00:48:18.000
work if if something new comes along like three months after launch that'd be really cool if we could

490
00:48:18.000 --> 00:48:30.000
do that I think again this goes into my my my concern which is like to to I think I think I think

491
00:48:30.000 --> 00:48:36.000
the the flexibility really comes from adding state to track adding things to track that that's

492
00:48:36.000 --> 00:48:43.000
probably not and but but in the end like I don't think adding something to track is probably what's

493
00:48:43.000 --> 00:48:51.000
going to really slow down the expansion and development of systems like this yeah what what

494
00:48:51.000 --> 00:48:55.000
we can slow things down is the is the or like what I think what's what's the biggest challenge is

495
00:48:56.000 --> 00:49:03.000
coming up with reinforcement and saying you can't do this unless you're this all those all those

496
00:49:03.000 --> 00:49:10.000
all those like cross examination stuff and I think it's to me the slippery slope is

497
00:49:10.000 --> 00:49:19.000
how much effort are we going to spend to define something that does meta enforcement versus the

498
00:49:19.000 --> 00:49:25.000
what's the cost of just doing the state keeping and the state mutation scripting on the server side

499
00:49:25.000 --> 00:49:29.000
like I know we didn't we don't want to talk about server authority like you know fully

500
00:49:29.000 --> 00:49:34.000
server authority of behaviors but like at some point the investment is going to fall off right like

501
00:49:34.000 --> 00:49:42.000
if the designers need to come up with a comprehensive list of all you know reasonable positions at

502
00:49:42.000 --> 00:49:49.000
which you can claim a particular award and then create like extract that data and then go

503
00:49:49.000 --> 00:49:53.000
through some workflow to put that data into another system so that the other system can

504
00:49:54.000 --> 00:49:59.000
without full knowledge of the of the information in in in on the client do some kind of

505
00:49:59.000 --> 00:50:05.000
reinforcement what is the effort involved in creating and maintaining that one thing that might

506
00:50:05.000 --> 00:50:11.000
help us actually is the the create a system they're using now for content is potentially that

507
00:50:11.000 --> 00:50:15.000
could be somewhat automated it's not hands it's not handscripted anymore although there is some

508
00:50:15.000 --> 00:50:21.000
talks about doing handscripting in some cases so if they're actually using a tool to like create

509
00:50:21.000 --> 00:50:26.000
the content and that and that they're actually selecting what models to create different stages

510
00:50:26.000 --> 00:50:31.000
potentially that could just we could export like a metaphor from that directly and they wouldn't

511
00:50:31.000 --> 00:50:38.000
even have to do any extra work but I do feel like it there's a big difference in investment in

512
00:50:38.000 --> 00:50:42.000
terms of like if you're literally saying effective what you need to do is you need to call

513
00:50:42.000 --> 00:50:47.000
the list of the models you're creating whether you're creating explosions whether you're doing this

514
00:50:47.000 --> 00:50:54.000
that's a lot easier to do for content than properly actually scripting all server side do you know

515
00:50:54.000 --> 00:51:01.000
me and trying to run a lockstep it with everybody you know there's two broad use cases here the

516
00:51:01.000 --> 00:51:06.000
the the adding items and the bottom one challenges leagues and season rewards those are largely ones

517
00:51:06.000 --> 00:51:11.000
where we're talking about awards and that we know much of the state server side the other examples

518
00:51:11.000 --> 00:51:17.000
here are all basically client things that are happening in the client and the server really has

519
00:51:17.000 --> 00:51:22.000
very limited or no knowledge about what's happening in those cases and yeah I think like the system

520
00:51:22.000 --> 00:51:29.000
almost has from this document there may be other like like genre or archetypes of use cases but

521
00:51:29.000 --> 00:51:36.000
from this document there's two large you know basically modes of operation one is where we know

522
00:51:36.000 --> 00:51:41.000
server side much about what's happening but we're missing some pieces and then the other

523
00:51:41.000 --> 00:51:45.000
what the other use cases we just don't know like if you're spawning stuff the server has no idea

524
00:51:45.000 --> 00:51:50.000
that you're spawning stuff well engaging players or things like that the thing I the one thing I

525
00:51:50.000 --> 00:51:55.000
contest about that statement about award server knowing a bunch it doesn't even know the players

526
00:51:55.000 --> 00:52:02.000
location so we can't even say this award can only be giving in this area that's true that's

527
00:52:02.000 --> 00:52:08.000
like a baby step in the right direction would be having player location generally by volume yeah

528
00:52:08.000 --> 00:52:15.000
and we have to cross them though I guess that that comes back to I think arbitration yeah

529
00:52:15.000 --> 00:52:20.000
yeah like can we trust if you know it's a there's a couple of models there's an election where we

530
00:52:20.000 --> 00:52:25.000
ask you know the other players it tells us is what this player is saying it's true or we have a

531
00:52:25.000 --> 00:52:30.000
sign token that says when you started this content we gave you this token you give it to us when

532
00:52:30.000 --> 00:52:35.000
you're done and we know you did it maybe a conjunction with knowing where they are on the map

533
00:52:35.000 --> 00:52:40.000
and it's a time component it took it should take you at least this long to do it you know there's

534
00:52:40.000 --> 00:52:47.000
a bunch of ways to come at modeling the state and that to me is kind of where the yeah the mean

535
00:52:47.000 --> 00:52:51.000
potatoes of this is you know in that in that in that in that particular piece which I think is

536
00:52:51.000 --> 00:52:56.000
where Dan why was kicking this off was a little bit of like how how would we do it and I totally

537
00:52:56.000 --> 00:53:05.000
agree Dan I think we don't know enough about the the the state to prevent cheers from doing bad things

538
00:53:05.000 --> 00:53:11.000
around claiming awards I mean won't I guess I guess my point is like just having the clients

539
00:53:11.000 --> 00:53:16.000
send their xyz position even if it's not technically trusted it's one more bit of data they'd have

540
00:53:16.000 --> 00:53:22.000
to mangle they just sent it to a secretary right so yeah I just I just want to I just want to

541
00:53:23.000 --> 00:53:33.000
clarify that like token signing is just one potential solution to to to no I'm just making that up

542
00:53:33.000 --> 00:53:39.000
what we're saying right right yeah so so the important thing is making sure we have the state

543
00:53:39.000 --> 00:53:45.000
on the server somewhere and and that we can reasonably trust them right and once we have that

544
00:53:45.000 --> 00:53:51.000
token signing is just a way of saying is it's just a way of getting the information from one server

545
00:53:51.000 --> 00:53:58.000
to another there are many ways we can do this right it kind like it it it doesn't make sense for

546
00:53:58.000 --> 00:54:07.000
the server that tracks the players core profile progression to also track the session where a

547
00:54:07.000 --> 00:54:11.000
bunch of other players are also connecting and manipulating and as the firmware and goes away when

548
00:54:11.000 --> 00:54:18.000
the session's done right so the token signing just happens to be one possible mechanic we can

549
00:54:18.000 --> 00:54:24.000
use to take information that is from the session to validate or do enforcement on the on the

550
00:54:24.000 --> 00:54:30.000
on the system that does the player profile right but we can do it a bunch of other ways it could

551
00:54:30.000 --> 00:54:36.000
be server calls you know whatever right so I believe in trust can we can we trust where the session

552
00:54:36.000 --> 00:54:39.000
server believes where they are can they can they lie to the session server where they are

553
00:54:39.000 --> 00:54:45.000
imagine they can about where they are in the map I think yeah it's not trustworthy because it's

554
00:54:45.000 --> 00:54:50.000
still all really from the client but we do trust on the session server is that they're in a particular

555
00:54:50.000 --> 00:54:57.000
session with other particular players if they match made that like what type of session is it's

556
00:54:57.000 --> 00:55:01.000
for if that if they have to match make to get enough music content we can trust that they made

557
00:55:01.000 --> 00:55:06.000
that matchmaking that they did we went to that process we were kind of running out of time so

558
00:55:06.000 --> 00:55:10.000
I was going to say they maybe maybe that's a good that might be a good way to do it there is

559
00:55:10.000 --> 00:55:17.000
and it like Ray said just get the data not worry about you know as a starting point and then

560
00:55:17.000 --> 00:55:21.000
and then not and then we could do that as a later step you know do you know I mean I know it's

561
00:55:21.000 --> 00:55:26.000
a very important part of this don't get me wrong but at least in terms of if we know if the state

562
00:55:26.000 --> 00:55:32.000
we need and we need to like validate off initially get something to iterate on and then after that

563
00:55:32.000 --> 00:55:39.000
we could do it but yeah I was at for for signing we can also have clients sign that they originated

564
00:55:39.000 --> 00:55:44.000
something like a AI call or sending something to another player with their certificates so we

565
00:55:44.000 --> 00:55:50.000
know that was definitely came their machine I mean further positions so unless it was too much

566
00:55:50.000 --> 00:55:55.000
you could potentially even get all players not just to report their own position but they could

567
00:55:55.000 --> 00:56:01.000
report their current understanding of all other players positions and then that way if somebody

568
00:56:01.000 --> 00:56:06.000
was saying they were somewhere else and we'd be hopefully to tack very quickly that they were

569
00:56:06.000 --> 00:56:14.000
lying basically but but yeah I mean I'll get looking at Olegs thing I guess it would be good in

570
00:56:14.000 --> 00:56:22.000
the last few minutes to talk about um next steps really I guess and like a potential like

571
00:56:22.000 --> 00:56:27.000
can they pay or something yeah it sounds like we need to so we have a meeting with kind of a broader

572
00:56:27.000 --> 00:56:31.000
group from that email friend the dam had started and the meeting is in two each week so things

573
00:56:31.000 --> 00:56:38.000
are Friday after next Friday or actually next Friday I've been Friday but it sort of sounds like we

574
00:56:38.000 --> 00:56:44.000
before that meeting occurs it would be good for us to kind of identify sort of the major step

575
00:56:44.000 --> 00:56:49.000
one kind of approach what are we gonna actually implement like if we for example if we start from

576
00:56:50.000 --> 00:56:56.000
just creating some sort of an observation server like we'd probably be good to figure out what

577
00:56:56.000 --> 00:57:02.000
kind of minutes of track or what kind of data we're tracking where we get it from so it kind of

578
00:57:02.000 --> 00:57:09.000
sounds like we need to probably meet again before that next meeting and then in meantime I can work

579
00:57:09.000 --> 00:57:14.000
with those of you who are interested to kind of gather your thoughts on what are those things we

580
00:57:14.000 --> 00:57:21.000
should be tracking and so the next time we meet we have at least a bit more direction of conversation

581
00:57:21.000 --> 00:57:28.000
or this solution maybe now we've had this this meeting we could we could do a bit on email as well

582
00:57:28.000 --> 00:57:32.000
and then have another meeting like you said Oleg and then that way you know we could just debate

583
00:57:32.000 --> 00:57:36.000
some of the some of these topics because I've obviously been quite some really good stuff brought

584
00:57:36.000 --> 00:57:41.000
up that needs more discussion and we could flash that out there and then we could go over it

585
00:57:41.000 --> 00:57:46.000
in a bit more detail and a call once with everybody's had a chance to chip in with different opinions

586
00:57:46.000 --> 00:57:51.000
and different suggestions about things maybe that would be a good way to go to know.

587
00:57:53.000 --> 00:57:59.000
I think I think it would also be nice to start enumerating the kind of information we have on

588
00:57:59.000 --> 00:58:03.000
the services side versus the client side and how trust you we start with you we think particular

589
00:58:03.000 --> 00:58:14.000
pieces of information are but I mean in the end we depend on client events right like to drive

590
00:58:14.000 --> 00:58:20.000
mutations in our state right so you know there's there's something yeah the thumb more in the client

591
00:58:20.000 --> 00:58:24.000
side than on the service side. If we look at it from like we need to make something

592
00:58:24.000 --> 00:58:29.000
that if we're going to suspect something or to prove something you need let's just say you need

593
00:58:29.000 --> 00:58:34.000
four pieces of data to come from the client can't be trusted is that me we can't implement it

594
00:58:34.000 --> 00:58:39.000
we're have to answer questions like that as we go through this about at what point do we have the

595
00:58:39.000 --> 00:58:45.000
data but it's so untrustworthy that it doesn't make sense to act on it in any way shape or form or

596
00:58:45.000 --> 00:58:54.000
so or the market is not trustworthy or you know something like low probability of being true

597
00:58:54.000 --> 00:59:01.000
I don't know something like that it's going to be maybe a bit of a judgment call and then the

598
00:59:01.000 --> 00:59:07.000
other thing is the other piece of this to me is what are we trying to build where does the system

599
00:59:07.000 --> 00:59:14.000
look like and we try to build it yeah the good thing is a lot of this is tied to content and that

600
00:59:14.000 --> 00:59:19.000
that makes it a little bit more trustworthy because in theory session server like Phil said we know

601
00:59:19.000 --> 00:59:24.000
the sessions we know what players are connected and we we should be able to know what content they're

602
00:59:24.000 --> 00:59:28.000
all playing and then if we've got metadata that says that's related to that at least we can

603
00:59:28.000 --> 00:59:34.000
validate it it's not going to be perfect but it will like Phil said as well like in the open world

604
00:59:34.000 --> 00:59:40.000
there's a lot of the the problems are so if we get even if we get to a point where if you're in

605
00:59:41.000 --> 00:59:46.000
free mode you're not running content and we can block load of things that would be a really big

606
00:59:46.000 --> 00:59:50.000
step forward than what we've got at the moment and because that's where most of the abuse is

607
00:59:50.000 --> 00:59:56.000
the happening at the moment anyway so yeah I'm wondering if it's worth doing a little like

608
00:59:57.000 --> 01:00:03.000
pilot project that just says hey ask the session server to sign a token that tells that says

609
01:00:04.000 --> 01:00:10.000
here's a timestamp and here's the content that I'm playing yeah and pass it along to like all

610
01:00:10.000 --> 01:00:16.000
word claims on you know either on the inventory server and you know if we eventually work on a

611
01:00:16.000 --> 01:00:22.000
challenge server we can get that information there too and at least in the in the journal of

612
01:00:22.000 --> 01:00:28.000
of the inventory server we can journal the the mission that you were on when when you did you know

613
01:00:28.000 --> 01:00:33.000
whatever yeah and the other thing that we need to think about is like the fact there's a lot of

614
01:00:33.000 --> 01:00:37.000
content that does happen in free realm that's open world content so that's something sessions

615
01:00:37.000 --> 01:00:42.000
server won't know about at the moment and whether we do it on Stracco and Sesh server whatever you

616
01:00:42.000 --> 01:00:47.000
know we will probably need to it might be that we need to know what content people are running and

617
01:00:47.000 --> 01:00:53.000
track that even if then even if they're not it's not tied directly to a a session like instance

618
01:00:53.000 --> 01:00:58.000
content is so so that's another thing we'll have to think about as part of this if we want to

619
01:01:00.000 --> 01:01:05.000
you know support this yeah yeah the most also which of these some of these we look at I want

620
01:01:05.000 --> 01:01:09.000
of these exploits are even possible in audio like attaching large number of items to other players

621
01:01:09.000 --> 01:01:14.000
that's something you can do in an audio I feel like some of these may have been fixed just by

622
01:01:14.000 --> 01:01:20.000
general improvements to inventory systems and things like that I'm just worrying we might

623
01:01:20.000 --> 01:01:25.000
have to use cases down to things that are possible in audio and you know by extension America's

624
01:01:25.000 --> 01:01:31.000
I think that has been done because I like it's gone through the vulnerability hub with this

625
01:01:31.000 --> 01:01:36.000
are these are actually open vulnerabilities so a lot of these like like the attaching things I

626
01:01:36.000 --> 01:01:41.000
don't I'm not sure if that's here actually but yeah the attaching one has I know it is I see what

627
01:01:41.000 --> 01:01:46.000
you mean yeah yeah like like this the problem at the moment is like we're caging they don't attach

628
01:01:46.000 --> 01:01:51.000
you can't attach anymore but you can create on top of which is the same thing so it's kind of like

629
01:01:51.000 --> 01:01:55.000
that's kind of how they're doing at the moment so really the with caging we want to like we are

630
01:01:55.000 --> 01:02:01.000
trying to do some peer-to-peer protections for GT online for that okay for the next couple of DLCs

631
01:02:01.000 --> 01:02:06.000
but yeah yeah because if we look at the categories of these some of these are ones we might want to

632
01:02:06.000 --> 01:02:12.000
try to fix just in the client to start and then think about how it fixes service side or

633
01:02:12.000 --> 01:02:16.000
categories of these service side move forward and we probably the other good thing about it is we

634
01:02:16.000 --> 01:02:21.000
probably well because we're we're doing this on GT online as every every DLC we address

635
01:02:21.000 --> 01:02:27.000
okay some of the top issues so but then the risk is obviously we'll see whether these things hold

636
01:02:27.000 --> 01:02:33.000
but yeah but it is the way it it might it doesn't mean even if we can fix it peer-to-peer doesn't

637
01:02:33.000 --> 01:02:38.000
necessarily mean we shouldn't do have to do it more on the service side because it you know

638
01:02:38.000 --> 01:02:43.000
yeah it's just moving us to a better place especially if we even if from a content description

639
01:02:43.000 --> 01:02:48.000
point of view in terms of getting like this is what we expect we don't have that at the moment

640
01:02:48.000 --> 01:02:52.000
even client side we don't know there's nothing when you make content that says these are the things

641
01:02:52.000 --> 01:02:57.000
that created these are the explosions these are where players walk about so even if we weren't doing

642
01:02:57.000 --> 01:03:03.000
it service side I think that would be worth quite a lot just to reason about content and understand

643
01:03:03.000 --> 01:03:07.000
things a bit better you know yeah

644
01:03:07.000 --> 01:03:20.000
we're over oh like take us home somebody at the door there's

645
01:03:25.000 --> 01:03:30.000
something something jumped we could probably just jump because I think cast is taking the notes

646
01:03:30.000 --> 01:03:37.000
so all right we're probably okay all right good deal thanks thanks everyone anyway for thanks

647
01:03:37.000 --> 01:03:41.000
everybody bye bye bye bye

648
01:03:41.000 --> 01:03:51.000
and

649
01:03:51.000 --> 01:03:59.000
am

650
01:03:59.000 --> 01:04:03.000
the

651
01:04:03.000 --> 01:04:10.000
If you want to prove that your knowledge has already changed our anda you will need only to express the insight into your knowledge.

652
01:04:15.000 --> 01:04:17.000
Remember!

