 I was just gonna message them see so I can see James at his desk. So he's maybe just messed up. You can wait cool Thanks Hey John Hey Hey John's both Johns James as well. Hey We've probably got enough people to get started So like Dan kiss has got a Got a task for this milestone that we've had we've had like this Going for a long time. We had it scheduled for a few milestones at a long time ago And then it just got deprioritized for the work But we're really keen to get started on it because similar sessioning feels an area We're kind of neglecting a little bit, you know, obviously there's a lot of Things going on that they're are important so it's somewhat understandable but at the same time we don't want to leave it for too long and and it was really hopefully as well it would be a good chance to like get a refresher of The current state of it in the game at the moment and any new pieces of work. We know need to be done to get even the basics working I think we've got quite a few people who should be able to answer that so like maybe firstly like in terms of basic Similar session in functionality. So you're in free room and you're You move around and you can move between sessions like when you're in free room in avatar at the moment is that actually a seamless session or is it is it an instance content session at the moment? Does anybody know that? It's a seamless session Cool. Yeah, yeah with everything enabled I think yeah, you're right. It's been the way because probably we haven't got the player counts that we're actually getting the the mergers I think all the changes we recently did that Andrews pushed out is like the splitting for content which at the end of that obviously We're wanting seamless mergers in so I anticipate that we're going to start seeing some fallout from that Yeah, which will hopefully like push push this forward as well, but yeah in terms of general like avatar free mode I guess it's not really been tested as such Yeah And I don't know if John Heimble know this one The I think in red dead even just a general join to a seamless session was effectively A seamless mergers is that right and if so is that still the case on America's at the moment? No and no Yeah, it was a matchmaking initial merge initial joining seamless was just matchmaking sort of found a session for you There was no seamless scubbins whatsoever until you got into that session and they say seamless we take effect Um matchmaking for seamless is obviously slightly different than matchmaking for competitive um and that obviously there's it didn't have the same constraints But um, yeah, it was just matchmaking Oh, yes, so so we haven't we've not we've not we effectively probably not tested this at all on america's There's certainly not for a long time like no, we're not merging then yeah, no Okay Do we have anything that can artificially reduce the The session size is the targets for splitting emerging so we can um get a yes um, we do have a small seamless and that should still work um, I think that's it to eight I think I was going to add another Even smaller seamless Um, which is like four maybe so that um split in the mergers Yeah, obviously I think The seamless targets one thing I guess about seamless matchmaking and just seamless entry and general is obviously that the seamless targets can be slightly lower than the max So that you've got that kind of slash um for people to move around obviously if you don't have any Slash than no, so no sessions will ever split emerge Um, so I think it's about 75% um on r a are we obviously eventually had to lower that to 12 but I think we've come to back up again on americas to the normal number which is about 22 I guess I think that's what it ended up being Um, but yeah, I can add another one that's sort of even lower but I think even the eight one will probably target I guess around sort of five or six before is that quite easy to do Yes, yeah, and it's a straightforward Is it clear on side over only or will elite service side changes? Yeah, I need a service I changed but not uh difficult Not one can't take us the long time to get through so it's hard and quite easy to add Um could you give me the chance to just make oh I was gonna make it again even do an even simpler change Like if I feel we don't need an eight I could just change the number on the server Yeah, and then just and then and then and did he got eight one after if we were to like a medium sized seamless split maybe Um, how does that get specified John is that sorry? How does that get requested just so that is that something that we have to like specify the command line command line on the client and then command that so basically there's on the server there's gonna be a different kind of um session manager um and when you use the use small like I think it's that use small seamless or something It just uses that one um otherwise is exactly the same it'll behave the same way it's just quite different max cap Did the other thing we had on red dead was dev seamless but I think that might have been Renewed Eh sort of still so what that it doesn't work in this only the way that people Thought it you the way it used to work so when seamless was initially written um it operated in a way that um Um, it would make player groups that were logical only so it would only make a group of people that were sort of relatively um Close to each other like relevant to the obviously like each other in terms of Semite or whatever but uh for Optimization purposes seamless change so that all sessions effectively ended up being as big as possible effectively So it might be a group of three people in the wilderness But there would be another group of three people in similar wilderness and another group of you and they wouldn't see each other Um but for Optimization purposes in the server it was easier to manage when sessions were all roughly equal size um So no dev seamless doesn't Operating quite the same way but it does hurt it does break the rules in one way which is that seamless merges can happen on top of each other So you don't have to um wander miles away You can stop warps someone to somewhere else and it will immediately drop them in and be capable of merging right on top of each other Um, does it also split Does it will it also split a player away if they go far away from you know So that's what it doesn't do that's what people used to be able to do with dev seamless You used to be able to get like two people on the same area and then right away Like beyond the kind of so there's there's two For example, you see in seamless there's like a law books I mean a five-per-six I mean the law books I mean it's like the kind of protecting merges and top of each other And then the fire ones obviously like relevancy um So the dev seamless used to be able to right away pass the law books and then it would trigger a split and then right back again But because now servers Unless you've got more than 30 to people that that one happened um But we do have rag widgets to do the equivalent Actually, I'm not even sure if I take the in and guess I remember used it But I've got rag widgets to do the same which basically affect the triggers a split and a merges You can do that wherever you want Um, and in theory I suppose I could probably make that something that is automatically triggered when you get pardoned for parts So if you wanted it I could probably add something that that might be quite cool It might make it easy to test stuff like this because then you could just yeah um But even if there's a rag widget that would probably be good enough as well Yeah, I've got a rag widget all it does is just when you get you can just trigger it There's a auto-classy trigger a split and then effectively immediately see I'm good to merge again And so if you've got dev seamless on it'll it'll make it work Yeah, so you could walk you could move far away trigger the split and then walk back and I would Yeah, I'd merge you back in I could maybe try and see if I'll maybe have a look out since if I can make that something that you could do Like so it works kind of like how it used to work so that Because right now, obviously dev seamless won't do what you expected to do But I could probably make it so the client just makes that happen So when you get far enough away Obviously there's going to be some constraints during this the flight If you've got loads of people in the session of this probably isn't going to work But you've got just one or two people but one or one obviously something like two people I have a good two people in it. I could probably make that work quite easily So that when you get I don't know 100 meters away Yeah, automatically splits and then says we're called to merge again Yeah, now that sounds cool So one thing that's kind of related to this as well done that I think you do you ask like it was probably years ago now But you know like these kind of like test bed kind of scenarios that we do in script So like that kind of behavior that John's just described like we kind of set up as well So in our test bed like you can run things where you know two clients will force a split via the you know native And then like warp you away and then reenable merging on one client So that you know the other one will kind of merge back in so that we could kind of like simulate that And that's kind of the very little testing that we actually did do for seamless sessioning where we were looking at kind of you know The persisting of our script program Through the mergers which was obviously was the difference that we aimed for from red dead So like that was like the I guess the initial testing we did early on but as I say that was quite a few years ago Um we got a lot of support from John Gernie at the times for Entities like being able to fly the system to persist yeah and then And then recently he did some like of the broadcast data like you know when the mergens it kind of re-initializes the broadcast data We've already registered and things so There is some Kind of backlog work that we we had done, I suppose and those kind of test cases as well. I still Should still be valid and that was what I was going to mention for this meeting about the player vehicle It's like there was one for the player vehicle, but um, I don't really ever got used or looked at that much Yeah, now that's that's perfect. I forgot about that. I think I actually forwarded that email onto done. Okay earlier, but Yeah, so we that's cool. So we'd have two two things we could look at I guess that's a good point with the broadcast data There was whether Obviously it's been rewritten at the moment. I mean, so I guess it's just whether whether anything's changed the wood That would would affect that so that might be something I'll have to look into Um, so I guess a quick question as well like in red dead How did we handle the player horse as a as a remark like script side was it did you just um Yeah, I guess just to put the question out there Because it's seeing as all the network script shut down when you when you did emerge So John Shreep and do you remember There's a little bit of both there are some special code handling so we could mark the player horse object as something that should be carried over Shouldn't be cleaned up or whatnot and then we would reconnect uh based on Doing I think we didn't have this until red dead the where we could take a pad and reconnect a network index to it and Yeah, and reallocate it reallocated to the network and do that way so there's a bit of handholding between both code and script to make that work um given I can't say that works smoothly given the number of problems we had in the first six six months to a year with the player horse and splitting and merging and all that but We did kind of stumble our way through it. There was definitely a lot of growing playing Growing pains along the way Okay, cool that makes sense that's good So so yes, so we we can see what we want to do with this task at least is make it Try and make that transparent script so you don't have to do anything. I guess it would be a good goal whether that's possible or not I mean the question mentioning that early on the plan had been To move anything that need to survive across this um check non scripts to code and edges never happened Oh Yeah, I remember like blitz because there was some work on with blitz in that regard as well wasn't there from a variety Yeah, though the compromise was like well Trying to merge scripts when we merge sessions is really hard. So let's just move the state Like prototype and script and once we know exactly what we're doing and anything that needs to still work while we're merging can just be done in code But that's just not how it Oh, yeah, okay, that's cool That's also important to point out that a lot of this happened on red dead because so much functionality for the player horse was script driven Uh, they're just yeah, it didn't exist anywhere but script uh, so there really wasn't a decent way to move it over to code without moving the entire like player horse stack over in the code Yeah Definitely not saying he was wrong that we ended up there, but just like that's the original plan is not where we ended up Yeah, I mean it hardly ever is It's fine In our dear kitchen of course have a car touched it or crops touched it because we absolutely Yes, that's actually the source does that was and still is the source of a lot of our problems since unfortunately uh the Affairly common exploit is uh is uh Corpse-doping Oxen Yeah off the back of the horse and they they they they specifically exploit seamless because there are places where we force seamless and they've figured out where those are And they use that for course duplication Um, I think we headed off at the past when it finally hits the cash inventory server Uh, when we noticed that they're selling a little bit too many um But it's it's definitely something that we need to continue to address going into America as we definitely didn't solve it in uh in a red dead I just wanted to say briefly. I meant to say at the start of the call uh looks like I'm gonna be all right I'm waiting for a doctor's telephone call so if it if it comes I'll have to bail but So I'm not just being rude if I disappear. I'll try not to shut the whole meeting down if I go but But just as I head up So I mean it kind of feels like Maybe initially we we need to see what the current state of things is because it's possible some things have rotted Like maybe dankay could do that as part of his task is like have a play with the testbed that That James mentioned and then maybe use the ragweed jit uh The functionality that john john high mentioned to see and just see see what happens if it works at all or see if there's any Any funny anything that anything that breaks and and then And that would be that could be a good first start and then then after that just trying to uh Go beyond that. I mean so we were already keeping scripts persisting across the merge James. I think you said Um, yeah, but so and and we're using the gooids. We've got that new gooid system that's that john g did as well So in theory the references will still work across merges as well. So I don't know I guess um is there anything any functionality you can do on the play of vehicle that we can prove Like script side that we can prove it's still working if we if we kind of After we've done a merge to another session There's all the blip in for it and then interactions that you can have with it. So we only spawn towards the same Enter to right and yeah, that's good Good Request it Kenny and like I don't know The column one really there though, but yeah, yeah, yeah, the the column sort of feature which is temp cleans up and spawns a new one So wouldn't be that but you can maybe I you can add stuff into the trunk as well check this and then just say about there as well Cool And and what happens um an age on John shrewpan met kind of mentioned this with the duplication exploits, but uh What happens when what is it going to disappear for the people when like if you leave the old session? Is that what we expect to happen? It's just gonna Or is somehow it's gonna happen? That's how we sort of fix part of it in audio is When the player left This session the horse would just flee so yeah, it would just run away with it, but they were still able to You know pull the stuff off the back in a short window of time, but yeah Cool, so it does it's not hard. It's not hard to delete those you wouldn't see a vanish. You'll just be effectively converted to ambient and then it would Sleep basically is that yeah, that was the intent they they exploited parts of that, but yeah, that was it that before we designed it to do Yeah, so would that entity this left? Sorry, you can sorry now go ahead I'm just gonna say with the with that entity that's left behind then that's fleeing is that Goid the same as the one that's in the that's taken into the other session like was that yeah, it's created a new one I mean periodically they're never the same right so they're just exploiting that fact They're just synced across the network. I know that's being pedantic, but it's important in this case because It's just the fact that it kind of when when they split they lose their network connections But exist on one machine they both exist on yeah both machines are just not synced to each other anymore Yeah, we didn't have that geared system as such so they they just have different ideas I mean that's that was kind of what was happening during the merge process the all that they'd all get fixed up effectively so I mean is the real argument we could hard delete it because We're supposed to people are generally supposed to split when they're too far away for you to see Was we did we just not do that as because we didn't want to risk ugly bugs Uh, we just didn't do it because we didn't want to risk ugly bugs Uh, I think there's a lot of other design concessions later on to where we probably could have done that Uh, but you know the original design goal was to Make it as seamless as possible like that was the ethos so we wanted to stay true to that word if we could okay But seamless can happen when the players are close as well right Did I get there the the seamless session split can happen while The players are close to each other. Oh, yeah, absolutely like uh well This technically yes, uh the seamless split that's automated by the session server cannot or it should not happen While the players are close to each other But script can trigger the seamless session split uh whenever we feel like and we often would um But that might be maybe that's like analogous to like starting as an instance in gta So you like presumably script has to do stuff to manage it looking Bad for other players if you do that precisely. Yeah So are we only trying to solve the cases where the Players are far from each other I Don't think we're trying to make it look perfect to this. I think like at least how When I added the bug originally out it was more about making sure that functionally it still works across the merges And that script and after do a lot of fix up logic That was kind of the idea behind it because like Other people were saying earlier in the call like in red dead There was quite a lot of work. It was passed to code. It was told all unit. This is important And then after it finished there was a lot of fix up done afterwards And it was it's really trying to avoid that Because kind of part of the idea was that we discussed it was quite a few years ago now was Trying to make seamless as simple as possible to script so they don't like in red dead There was a lot of script had to do a lot of work to support seamless sessioning and we want to try and Make it a little bit more transparent This time Might not be a hundred percent possible, but we just want to make it as easy as we can make it basically Uh Quick question since you mentioned the unique GUITs Don't we kind of with that new system aren't we kind of forced to kind of Delete those object as soon as possible because if you split and then merge back in Uh, then you would have the same object twice Well, if you just close it and maybe fade it out it will be probably safer anyway Yeah, no, that's a really good point So I can sort of answer this whenever we do this oh if we're talking about the The on script demand split before we Marked that we're eligible to merge again. Uh, we do a population clear So it should delete all those entities that We copied from the original session If that's what you're asking. I don't know about the the code driven Split and then merge back in But the script you the game code will force that to happen if script doesn't call the API to do it So it's it's basically if script decides just tells us when to do it then we'll do it when script tells us if They forget or just leave it default settings then it will still get done and it will But this will look really ugly and hopefully get bug because it looks ugly Also because Android is talking about the new GUIT system Uh, what we can probably what this new GUIT would allow us to do and I think Dan kissed it's a bit similar to try and address some of the peltax exploits The John Schrupp I was talking about earlier Um, is it's like like on scripts in GTA even and red dead The part of the host migration protection is we have like we do have ideas so we can and you can catch duplicates So if the host migrates at bad time and they recreate a load of script objects We can detect that we've got duplicates So if we've got a GUIT what we could do is when when the merge finishes we could look for duplicate Cheap things with you know duplicate entities with the same GUIT and like clean clean one of them up Uh, we did that for script on script side you know for script management on five so We could potentially do something like that as well here Yeah, I should add that that build that population clear There's a lot of things that we exempt from that for various reasons like the horse yeah writing So it's entirely possible that we that there that still happens Yeah, yeah, that's what I mean like so the if we if we look for the GUITs we can be a bit more targeted Whereas that was kind of like uh, let's get rid of everything and it should take out any duplicates but But like people said so we didn't always get everything So you have to work with that So I think the word knowing is that the kind of is seamless visually As possible in America's and I think that we have explained to like stewie and look forward Uh, there will need to be a camera cut Also change it like um of changing sessions work for this very reason, but I think I've fade out as hard known Yeah, we can you know can hide stuff on a skycam or whatever or do something inventive but the people who are designing the game know That about this limitation And previously it was just ignored so it does We can work with design with them knowing that That's really good And also some of these things they're kind of edge cases are when people are trying to exploit the game So as long as we're not hard to lead in things Super regularly so it just looks like really glitchy It's probably okay if it's just if it's just like for a minute wait I mean we already have that in some cases where we have to Happens even in single players some things we're cleaned up on screen and emergencies so Sure, that will be okay Just as long as it doesn't isn't a regular occurrence So I guess we've got a few things we could do to get started i mean we I'd thank k how do has that been useful for you? I told you if you've got more an idea of The sorts of things to look at i mean we could talk in a bit more detail about some of these because you're not I point you in the right direction some of these places I think i'll have some questions about very specific scenarios Um Yeah, with the with the actual vehicle duplication like if there's that scenario that uh and just mentioned where a player leaves the session and then joins back in right away We would end up with two of the same vehicles And in different locations like for example, how would we solve that? I mean we have again we kind of we have those in gta people commonly trying Car tube turn now yeah, it depends on i guess the What then it is if we don't care about it. It's just a prop that's fine But if there's something like a vehicle that holds value then On five we we have a script that kind of takes over and checks if the owner of that vehicle was left And if so we lock it and you know tell it to clean up basically And so we could look at Associates and associating it with the specific player To decide like what one should get thrown out or when it should get thrown out I guess We we do have um unique ideas for every object again creates Those are sent to the server the server is aware of what Objects exist in different sessions So we can have server-side logic that says these two sessions have the same object They can't merge under any circumstance We do have that logic for when the number of duplicates is something it's high enough That we know something is clearly really broken and we prevent merging in that case But I would caution about using that because um If we ever did have a reason why duplicates were being made Um, and then that does happen some like naturally Uh, it's just the expectation is that it's rare enough that eventually it It it clears out just because of the The random chance that anything in the world gets deleted because people play the game and things Page in and out all the time But um if we were to make uh Make that a tighter restriction There's there's definitely a risk that like we could wake up one morning and no one's merging because A very silly bug that We probably don't care about is preventing anyone from merging We have the kind of design scenarios as well where you might go into instance content and then come back to the session you were in um So you just say you want to resolve it and block you completely i guess in those cases I guess it depends like what type of vehicle is and what you can do is it you know if it's a crap car or the street There's worth 2000 facts to sell it to be care and if it's been you know 20 minutes half an hour or whatever Since you were last in that session but if it's something that People are able to do something quick and make money from then it feels like that But in some way to tell the difference between them as I just say kevius One is very legit and one is people Thanks for you know I'll get it Yeah, I think it would be good to do for this task to focus on Not all focus on the exploits that kind of feels like it's a bit later on like this is more like Just making it the process simple to script transparent and just I think they'd be good to focus on that aspect to start with and also use it as a There's a chance to make sure seamless works at all because if we've not done it for ages it's possible things are broken So could who which is the reason why I was quite keen to get some tasks around it even if it's not that technically the top priority of the moment I was going to ask that it might be beyond this cooldown and over at time It's just a bottom and the kind of use of that to help but this as well I know you guys in netcode use it a lot for For a final like the kind of session server behavior and things but Like if if there was a way that we can start as supposed seeing if script fall over via that and I guess that gives us a More accurate environment where we can use increased by a number of things like that I don't know when that was or anything but Phil we've got us we've just got up to 64 instances now after A long hard battle haven't we and we were talking about doing Starting doing that again artificially reducing the session sizes so we could get more splitting emerging Happening but but there's there was quite a few bits and pieces. We were still deciding It wasn't the fill like like for example script because a lot of the testing we did on red dead we disabled Scriptive content for that because it It usually stopped seamless merges and things like that So we could get yeah, we definitely want to start doing that that's something we talked about When planning for the small stone actually Yeah, our general approach was to simplify the game enough to where we weren't getting a flood of bugs In the anime testing and just methodically knock out as many as we could And then slowly turn things back on in the game and we never actually finished like Turning everything on in the game and having things run just bleak error-free for like overnight Yeah, we had four backs as well. So if it got stuck too long it just said Just do it anyway, but that was one of the reasons why we got cheap tickets because that That was the sort you know that was the trade off really But it was like either it would never you would just wouldn't feature probably wouldn't have worked at all or We had to sometimes just give up And to be fair it wasn't like just that it was script like there was a lot of AI tasks. They're being changed. Yeah, the AI task would block a you can Change ownership of an object in in a certain state and objects there held that way prevent merging also Like if I if like getting into a car has a state And one of those states is supposed to last half a second or something And it just doesn't go through the state that's supposed to unseptice Like that we want to the common box we'd see Yeah, it's a lot of where we were hoping to keep fixing them on our yard as a test case for America's But obviously we're not doing upticks anymore otherwise we would have chipped away at that to see if we get actually get to the end Well, yeah, because I know that we we used it when we were like a much smaller group on America's life You know four or five years ago we were using the bot farm like well I was using it for local testing like to test behavior as scripture emerges and it was actually really useful And I think we even just created like a game mode that we booted into on the Bot farm that didn't have like world events running and things like that. So it was like just that game move level systems Yeah, so if we got something on that back that would be pretty Yeah, we're hopeful to do that. It's it's been a long hard journey to get to 64 because we've We've IT wanted us to move to the end and there's been we've been on this bit of back and forth with It's just been a bit of a nightmare hasn't it fell so we now we are We should begin potentially if that if we're hopeful we'll be able to increase the capacity of more and then it'll be easier to get more people using it but that's good I mean 64 is still really good. I mean that's going to be a good start point So They're talking about ordering enough hardware to add another 120 instances on top that 64 so Yeah So these are good Are these split-mars that are building? So if you just like rent a cloud for these For the VM If we come back to physical hardware now fellow we still on VMs because we're there's so much back and forth about what we do We are currently on VMs and we are still discussing buying hardware that's bespoke Yeah, it's a bit of fluid probably in the with the mixture Yeah Oh, that's another thing that's we're saying just before we go It's probably worth organizing a demo fill of the new bot farm because feels to a lot of Work on that and we've gotten it's it's web based now and it's got a really nice user interface It would be definitely worth Giving you a chance to to show that off fell because it's pretty cool So yeah, we could try and set that up for anybody who's interested Cool right better go because Late for another call but thanks for making time to discuss this think it was quite good Stop chatting about seamless again And have a good one everyone when I think calf spin takers from night so something round You can have a Authentic